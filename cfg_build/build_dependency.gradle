Properties properties = new Properties()
if (project.rootProject.file("local.properties").exists()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}

def versions = [:]
ext.versions = versions

// ********************************************* Dependence ****************************************
def deps = [:]

def kotlin = [:]
if (properties.getProperty("kotlin_version") != null) {
    versions.kotlin = properties.getProperty("kotlin_version")
} else {
    versions.kotlin = "1.4.10"
}
kotlin.stdlib = "org.jetbrains.kotlin:kotlin-stdlib:$versions.kotlin"
kotlin.test = "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin"
kotlin.plugin = "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin"
kotlin.allopen = "org.jetbrains.kotlin:kotlin-allopen:$versions.kotlin"
deps.kotlin = kotlin

def kotlinx = [:]
versions.kotlinx = "1.3.9"
kotlinx.coroutines_core = "org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.kotlinx"
kotlinx.coroutines_android = "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.kotlinx"
kotlinx.coroutines_test = "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.4.0"
deps.kotlinx = kotlinx
ext.kotlin_dependencies = [
        deps.kotlin.stdlib,
        deps.kotlinx.coroutines_core,
        deps.kotlinx.coroutines_android,
]

def support = [:]
versions.support = "1.2.0"
support.annotations = "androidx.annotation:annotation:$versions.support"
support.app_compat = "androidx.appcompat:appcompat:$versions.support"
support.v4 = "androidx.legacy:legacy-support-v4:$versions.support"
support.core_utils = "androidx.legacy:legacy-support-core-utils:$versions.support"
support.preference = "androidx.preference:preference:$versions.support"

deps.support = support
deps.design = "com.google.android.material:material:1.2.1"
deps.recyclerview = "androidx.recyclerview:recyclerview:1.1.0"

def lifecycle = [:]
versions.lifecycle = "2.3.0-beta01"
lifecycle.runtime = "androidx.lifecycle:lifecycle-runtime:$versions.lifecycle"
lifecycle.extensions = "androidx.lifecycle:lifecycle-extensions:2.2.0"
lifecycle.java8 = "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
lifecycle.compiler = "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"
lifecycle.livedata = "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
deps.lifecycle = lifecycle
ext.lifecycle_dependencies = [
        deps.lifecycle.extensions,
        deps.lifecycle.runtime,
        deps.lifecycle.livedata
]

def retrofit = [:]
versions.retrofit = "2.7.1"
retrofit.runtime = "com.squareup.retrofit2:retrofit:$versions.retrofit"
retrofit.gson = "com.squareup.retrofit2:converter-gson:$versions.retrofit"
retrofit.mock = "com.squareup.retrofit2:retrofit-mock:$versions.retrofit"
retrofit.converters = "com.squareup.retrofit2:retrofit-converters:${versions.retrofit}"
retrofit.adapters = "com.squareup.retrofit2:retrofit-adapters:${versions.retrofit}"
//retrofit.rxjava2 = "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"
deps.retrofit = retrofit
ext.retrofit_dependencies = [
        deps.retrofit.runtime,
        deps.retrofit.gson,
        deps.retrofit.converters,
        deps.retrofit.adapters,
//        deps.retrofit.rxjava2
]


def okhttp = [:]
versions.okhttp = "4.4.0"
okhttp.runtime = "com.squareup.okhttp3:okhttp:${versions.okhttp}"
okhttp.logging = "com.squareup.okhttp3:logging-interceptor:${versions.okhttp}"
okhttp.tls = "com.squareup.okhttp3:okhttp-tls:${versions.okhttp}"
deps.okio = "com.squareup.okio:okio:2.1.0"
deps.okhttp_stats = "com.github.flipkart-incubator:okhttp-stats:1.1.1"
deps.okhttp = okhttp
ext.okhttp_dependencies = [
        deps.okhttp.runtime,
        deps.okhttp.logging,
        deps.okio,
        deps.okhttp_stats,
]

def rxjava2 = [:]
rxjava2.runtime = "io.reactivex.rxjava2:rxjava:2.2.4"
rxjava2.rxandroid = "io.reactivex.rxjava2:rxandroid:2.1.0"
rxjava2.rxbinding = "com.jakewharton.rxbinding2:rxbinding:2.2.0"
deps.rxjava2 = rxjava2
ext.rxjava2_dependencies = [
        deps.rxjava2.runtime,
        deps.rxjava2.rxandroid,
        deps.rxjava2.rxbinding
]

def smartrefresh = [:]
versions.smartrefresh = "2.0.1"
smartrefresh.layout = "com.scwang.smart:refresh-layout-kernel:${versions.smartrefresh}"
smartrefresh.header = "com.scwang.smart:refresh-header-classics:${versions.smartrefresh}"
deps.smartrefresh = smartrefresh

def room = [:]
versions.room = "2.2.5"
room.runtime = "androidx.room:room-runtime:${versions.room}"
room.compiler = "androidx.room:room-compiler:${versions.room}"
room.ktx = "androidx.room:room-ktx:${versions.room}"
room.rxjava2 = "androidx.room:room-rxjava2:${versions.room}"
room.testing = "androidx.room:room-testing:${versions.room}"
deps.room = room

def hilt = [:]
versions.hilt = "2.28-alpha"
hilt.plugin = "com.google.dagger:hilt-android-gradle-plugin:${versions.hilt}"
hilt.android = "com.google.dagger:hilt-android:${versions.hilt}"
hilt.kapt = "com.google.dagger:hilt-android-compiler:${versions.hilt}"
hilt.viewmodel = 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
hilt.viewmodel_kapt = 'androidx.hilt:hilt-compiler:1.0.0-alpha02'
hilt.work = "androidx.hilt:hilt-work:1.0.0-alpha01"
hilt.work_kapt = "androidx.hilt:hilt-compiler:1.0.0-alpha01"
// For instrumented tests.
hilt.android_test = "com.google.dagger:hilt-android-testing:${versions.hilt}"
// ...with Kotlin.
hilt.kapt_android_test = "com.google.dagger:hilt-android-compiler:${versions.hilt}"
deps.hilt = hilt

def nav = [:]
versions.nav = "2.3.1"
nav.fragment = "androidx.navigation:navigation-fragment-ktx:${versions.nav}"
nav.ui = "androidx.navigation:navigation-ui-ktx:${versions.nav}"
nav.plugin_save_arg = "androidx.navigation:navigation-safe-args-gradle-plugin:${versions.nav}"
deps.nav = nav
deps.nav_dep = [
        nav.fragment,
        nav.ui
]

versions.glide = "4.11.0"
deps.glide = "com.github.bumptech.glide:glide:${versions.glide}"
deps.glide_kapt = "com.github.bumptech.glide:compiler:${versions.glide}"

deps.glide_transformations = "jp.wasabeef:glide-transformations:3.3.0"
deps.banner = "com.youth.banner:banner:2.1.0"
deps.cardslideview = "com.crazysunj:cardslideview:2.3.0"


def work = [:]
versions.work = "2.4.0"
work.runtime = "androidx.work:work-runtime-ktx:${versions.work}"
work.rxjava2 = "androidx.work:work-rxjava2:${versions.work}"
deps.work = work

def datastore = [:]
versions.datastore = "1.0.0-alpha04"
datastore.datastore_preferences = "androidx.datastore:datastore-preferences:${versions.datastore}"
datastore.datastore_preferences_core = "androidx.datastore:datastore-preferences-core:${versions.datastore}"
deps.datastore = [
        datastore.datastore_preferences,
        datastore.datastore_preferences_core
]

//def ijkplayer = [:]
//versions.ijkplayer = "0.8.8"
//ijkplayer.java = "tv.danmaku.ijk.media:ijkplayer-java:$versions.ijkplayer"
//ijkplayer.armv7a = "tv.danmaku.ijk.media:ijkplayer-armv7a:$versions.ijkplayer"
//ijkplayer.armv5 = "tv.danmaku.ijk.media:ijkplayer-armv5:$versions.ijkplayer"
//ijkplayer.arm64 = "tv.danmaku.ijk.media:ijkplayer-arm64:$versions.ijkplayer"
//ijkplayer.x86 = "tv.danmaku.ijk.media:ijkplayer-x86:$versions.ijkplayer"
//ijkplayer.x86_64 = "tv.danmaku.ijk.media:ijkplayer-x86_64:$versions.ijkplayer"
//ijkplayer.exo = "tv.danmaku.ijk.media:ijkplayer-exo:$versions.ijkplayer"
//deps.ijkplayer = ijkplayer


deps.android_gradle_plugin = "com.android.tools.build:gradle:4.1.0"
deps.lifecycle_process = "androidx.lifecycle:lifecycle-process:2.3.0"
deps.constraint_layout = "androidx.constraintlayout:constraintlayout:1.1.3"
deps.gridlayout = "androidx.gridlayout:gridlayout:1.0.0"
deps.viewpager = "androidx.viewpager:viewpager:1.0.0"
deps.verticalTabLayout = "q.rorbin:VerticalTabLayout:1.2.9"
deps.paging = "androidx.paging:paging-runtime:2.0.0-beta01"
deps.preference = "androidx.preference:preference-ktx:1.1.1"
deps.brvah = "com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.45"
deps.logger = "com.orhanobut:logger:2.1.1"
deps.badge = "q.rorbin:badgeview:1.1.3"
deps.gson = "com.google.code.gson:gson:2.8.5"
deps.kotson = "com.github.salomonbrys.kotson:kotson:2.5.0"
deps.eventbus = "org.greenrobot:eventbus:3.1.1"
deps.easypermissions = "pub.devrel:easypermissions:2.0.0"
deps.qmui = "com.qmuiteam:qmui:1.1.3"
deps.agentweb = "com.github.Justson.AgentWeb:agentweb-core:v4.1.9-androidx"
deps.agentweb_filechooser = "com.github.Justson.AgentWeb:agentweb-filechooser:v4.1.9-androidx"
deps.agentweb_download = "com.github.Justson:Downloader:v4.1.9-androidx"
deps.lottie = "com.airbnb.android:lottie:3.4.4"
deps.tiny_pinyin = "com.github.promeg:tinypinyin:2.0.3"
deps.commons = "commons-io:commons-io:2.6"
deps.reflection = "com.github.wzgiceman:Reflection:1.0"
deps.tray = "net.grandcentrix.tray:tray:0.12.0"
deps.j2jgen_plugin = "com.tencent.mia.j2jgen:jce2java-gradle-plugin:1.1.0"
deps.jsonschema2pojo = "org.jsonschema2pojo:jsonschema2pojo-gradle-plugin:1.0.2"
deps.mia_account2 = "com.tencent.mia.conn:account2:3.2.0.14-tencentcloud-compileWns-lite-SNAPSHOT@aar"
deps.bugly = "com.tencent.bugly:crashreport:latest.release"
deps.bugly_ndk = "com.tencent.bugly:nativecrashreport:latest.release@aar"
deps.leakcanary = "com.squareup.leakcanary:leakcanary-android:2.5"
deps.qapm = "com.tencent.qapm:qapmsdk:3.6.1.5-SNAPSHOT"
deps.qapm_plugin = "com.tencent.qapmplugin:qapm-plugin:2.2"
deps.xinge = "com.tencent.xinge:xinge:4.3.5-release"
deps.jg = "com.tencent.jg:jg:1.1"
deps.wup = "com.tencent.wup:wup:1.0.0.E-Release"
deps.mid = "com.tencent.mid:mid:4.0.7-Release"
deps.android_dynamic_animation = "com.android.support:support-dynamic-animation:28.0.0"
deps.reactive_network = "com.github.pwittchen:reactivenetwork-rx2:3.0.7"
deps.androidx_core_ktx = "androidx.core:core-ktx:1.3.2"
deps.androidx_ktx_activity = "androidx.activity:activity-ktx:1.1.0"
deps.androidx_ktx_fragment = "androidx.fragment:fragment-ktx:1.3.0-beta01"
deps.androidx_fragment = "androidx.fragment:fragment:1.3.0-beta01"
deps.android_auto_size = 'me.jessyan:autosize:1.2.1'
deps.netstatusmanager = 'com.github.D10NGYANG:NetStatusManager:1.3'

ext.common_sys_dependencies = [
        deps.support.app_compat,
        deps.recyclerview,
        deps.design,
        deps.constraint_layout,
        deps.androidx_core_ktx,
        deps.androidx_ktx_fragment,
        deps.androidx_ktx_activity,
]

// ********************************************* Test Dependence ***********************************
def powermock = [:]
versions.powermock = "2.0.0"
powermock.junit4 = "org.powermock:powermock-module-junit4:$versions.powermock"
powermock.junit4_rule = "org.powermock:powermock-module-junit4-rule:$versions.powermock"
powermock.mockito2 = "org.powermock:powermock--mockito2:$versions.powermock"
powermock.classloading = "org.powermock:powermock-classloading-xstream:$versions.powermock"
deps.powermock = powermock

def mockito = [:]
mockito.core = "org.mockito:mockito-core:2.7.19"
mockito.all = "org.mockito:mockito-all:1.10.19"
mockito.android = "org.mockito:mockito-android:2.22.0"
deps.mockito = mockito

deps.junit = "junit:junit:4.12"
deps.hamcrest_all = "org.hamcrest:hamcrest-all:1.3"
deps.hamcrest_lib = "org.hamcrest:hamcrest-library:1.3"
deps.livedata_testing_ktx = "com.jraska.livedata:testing-ktx:1.0.0"
deps.androidx_test_core = "androidx.test:core:1.1.0"

deps.mockwebserver = "com.squareup.okhttp3:mockwebserver:4.4.0"
deps.arch_core_testing = "android.arch.core:core-testing:1.1.1"
deps.robolectric = "org.robolectric:robolectric:4.2"
deps.mockk = "io.mockk:mockk:1.9.2"
deps.test_ext_junit = "androidx.test.ext:junit:1.1.0"
deps.test_rules = "androidx.test:rules:1.1.1"
deps.espresso_core = "androidx.test.espresso:espresso-core:3.1.1"
deps.uiautomator = "androidx.test.uiautomator:uiautomator:2.2.0"

ext.deps = deps
ext.test_dependencies = [
        //unit test Required -- JUnit 4 framework
        deps.junit,
        // Live Data Test Helper https://github.com/jraska/livedata-testing
        deps.livedata_testing_ktx,
        // unit test Optional -- Robolectric environment
        deps.androidx_test_core,
        // unit test Optional -- Mockito framework
        deps.mockito.core,
        deps.room.testing,
        deps.hamcrest_lib,
        deps.mockwebserver,
        deps.arch_core_testing,
        deps.robolectric,
//        deps.powermock.junit4,
//        deps.powermock.junit4_rule,
//        deps.powermock.mockito2,
//        deps.powermock.classloading,
        deps.mockk,
]

ext.android_test_dependencies = [
        deps.test_ext_junit,
        deps.test_rules,
        deps.arch_core_testing,
        deps.livedata_testing_ktx,
        deps.hamcrest_lib,
        deps.espresso_core,
        deps.uiautomator,
]


static def addRepos(RepositoryHandler handler) {
    handler.google()
    handler.jcenter()
    handler.maven { url 'https://jitpack.io' }
}

ext.addRepos = this.&addRepos


//编译工具版本
def build_tools_versions = [:]
build_tools_versions.min_sdk = 23
build_tools_versions.target_sdk = 30
build_tools_versions.build_tools = "30.0.3"
ext.build_tools_versions = build_tools_versions

//后台接口
def apiServerUrl = [:]
//apiServerUrl.dev = '"https://m2-dev.fcb.com.cn/"'
apiServerUrl.dev = '"https://localhost:6878/"'
apiServerUrl.test = '"https://localhost:6878/"'
apiServerUrl.release = '"https://localhost:6878/"'
ext.apiServerUrl = apiServerUrl